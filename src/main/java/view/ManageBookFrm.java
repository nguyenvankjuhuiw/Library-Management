/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import dao.BookDAO;
import dao.GenreDAO;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Book;
import model.Genre;
import model.User;

/**
 *
 * @author Admin
 */
public class ManageBookFrm extends javax.swing.JFrame {

    /**
     * Creates new form ManageBookFrm
     */
    private User user;
    DefaultTableModel modelBook;
    DefaultTableModel modelGenre;
    List<Book> listbook;
    List<Genre> listgenre;
    List<Genre> listgenrebook;
    private int selectIndexBook;
    public ManageBookFrm(User user) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.user = user;
        modelBook = (DefaultTableModel) tableBook.getModel();
        modelGenre = (DefaultTableModel) tableGenre.getModel();
        textGenreUpdate.setEditable(false);
        labelGenreId.setText("");
        labelNameGenre.setText("");
        try {
            listgenrebook = new GenreDAO().getAllGenre();
            listbook = new BookDAO().getAllBook();
            listgenre = new GenreDAO().getAllGenre();
            showTableBook();
            showTableGenre();
        } catch (SQLException ex) {
            Logger.getLogger(ManageBookFrm.class.getName()).log(Level.SEVERE, null, ex);
        }
        dataChooseGenre();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableBook = new javax.swing.JTable();
        textSearchBook = new javax.swing.JTextField();
        chooseGenre = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        buttonEditBook = new javax.swing.JButton();
        buttonBook = new javax.swing.JButton();
        buttonViewBook = new javax.swing.JButton();
        buttonSearchBook = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        buttonDeleteBook = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableGenre = new javax.swing.JTable();
        textGenreAdd = new javax.swing.JTextField();
        buttonAdd = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        buttonDelete = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        textGenreUpdate = new javax.swing.JTextField();
        buttonUpdate = new javax.swing.JButton();
        labelGenreId = new javax.swing.JLabel();
        labelNameGenre = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        buttonExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 102, 0));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Quản lý thông tin sách");

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));

        tableBook.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Tên sách", "Tác giả", "Thể loại", "Giá tiền", "Số lượng"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tableBook);
        if (tableBook.getColumnModel().getColumnCount() > 0) {
            tableBook.getColumnModel().getColumn(0).setMinWidth(50);
            tableBook.getColumnModel().getColumn(0).setMaxWidth(50);
            tableBook.getColumnModel().getColumn(2).setMinWidth(120);
            tableBook.getColumnModel().getColumn(2).setMaxWidth(120);
            tableBook.getColumnModel().getColumn(3).setMinWidth(150);
            tableBook.getColumnModel().getColumn(3).setMaxWidth(150);
            tableBook.getColumnModel().getColumn(4).setMinWidth(150);
            tableBook.getColumnModel().getColumn(4).setMaxWidth(150);
            tableBook.getColumnModel().getColumn(5).setMinWidth(150);
            tableBook.getColumnModel().getColumn(5).setMaxWidth(150);
        }

        chooseGenre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseGenreActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Arial", 3, 18)); // NOI18N
        jLabel11.setText("Lọc thể loại");

        buttonEditBook.setBackground(new java.awt.Color(0, 102, 0));
        buttonEditBook.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        buttonEditBook.setForeground(new java.awt.Color(255, 255, 255));
        buttonEditBook.setText("Sửa");
        buttonEditBook.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        buttonEditBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEditBookActionPerformed(evt);
            }
        });

        buttonBook.setBackground(new java.awt.Color(0, 102, 0));
        buttonBook.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        buttonBook.setForeground(new java.awt.Color(255, 255, 255));
        buttonBook.setText("Thêm mới");
        buttonBook.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        buttonBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBookActionPerformed(evt);
            }
        });

        buttonViewBook.setBackground(new java.awt.Color(0, 102, 0));
        buttonViewBook.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        buttonViewBook.setForeground(new java.awt.Color(255, 255, 255));
        buttonViewBook.setText("Xem chi tiết");
        buttonViewBook.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        buttonViewBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonViewBookActionPerformed(evt);
            }
        });

        buttonSearchBook.setBackground(new java.awt.Color(0, 102, 0));
        buttonSearchBook.setForeground(new java.awt.Color(255, 255, 255));
        buttonSearchBook.setText("Tìm kiếm");
        buttonSearchBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSearchBookActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Arial", 3, 18)); // NOI18N
        jLabel12.setText("Tên sách:");

        buttonDeleteBook.setBackground(new java.awt.Color(0, 102, 0));
        buttonDeleteBook.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        buttonDeleteBook.setForeground(new java.awt.Color(255, 255, 255));
        buttonDeleteBook.setText("Xóa");
        buttonDeleteBook.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        buttonDeleteBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteBookActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(jLabel12)
                        .addGap(18, 18, 18)
                        .addComponent(textSearchBook, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(buttonSearchBook)
                        .addGap(31, 31, 31)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(chooseGenre, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(buttonViewBook, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(buttonEditBook, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(buttonDeleteBook, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(buttonBook, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1042, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(textSearchBook, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonSearchBook)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(chooseGenre))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonBook, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonDeleteBook, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonEditBook, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonViewBook, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Quản lý sách", jPanel5);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        tableGenre.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã thể loại", "Tên thể loại", "Số lượng đầu sách"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableGenre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableGenreMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableGenre);
        if (tableGenre.getColumnModel().getColumnCount() > 0) {
            tableGenre.getColumnModel().getColumn(0).setMinWidth(50);
            tableGenre.getColumnModel().getColumn(0).setMaxWidth(50);
            tableGenre.getColumnModel().getColumn(1).setMinWidth(100);
            tableGenre.getColumnModel().getColumn(1).setMaxWidth(100);
        }

        buttonAdd.setBackground(new java.awt.Color(0, 102, 0));
        buttonAdd.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        buttonAdd.setForeground(new java.awt.Color(255, 255, 255));
        buttonAdd.setText("Thêm");
        buttonAdd.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        buttonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel4.setText("Thêm thể loại mới");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setText("Tên thể loại");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel6.setText("Cập nhật hoặc xóa thể loại");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setText("Tên mới thể loại");

        buttonDelete.setBackground(new java.awt.Color(0, 102, 0));
        buttonDelete.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        buttonDelete.setForeground(new java.awt.Color(255, 255, 255));
        buttonDelete.setText("Xóa");
        buttonDelete.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        buttonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setText("Mã thể loại");

        buttonUpdate.setBackground(new java.awt.Color(0, 102, 0));
        buttonUpdate.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        buttonUpdate.setForeground(new java.awt.Color(255, 255, 255));
        buttonUpdate.setText("Cập nhật");
        buttonUpdate.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        buttonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonUpdateActionPerformed(evt);
            }
        });

        labelGenreId.setText("jLabel2");

        labelNameGenre.setText("jLabel2");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel9.setText("Tên cũ thể loại");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 523, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(labelNameGenre, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(buttonUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(buttonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(textGenreUpdate, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(labelGenreId, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(buttonAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(textGenreAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(jLabel6)))
                .addContainerGap(77, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(textGenreAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(buttonAdd)
                .addGap(34, 34, 34)
                .addComponent(jLabel6)
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(labelGenreId))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNameGenre)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textGenreUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonUpdate)
                    .addComponent(buttonDelete))
                .addGap(131, 131, 131))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Quản lý thể loại", jPanel6);

        buttonExit.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        buttonExit.setForeground(new java.awt.Color(0, 102, 0));
        buttonExit.setText("Thoát");
        buttonExit.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        buttonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(buttonExit, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(333, 333, 333)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(14, 14, 14)
                            .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1096, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonExit, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonEditBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEditBookActionPerformed
        // TODO add your handling code here:
        selectIndexBook = tableBook.getSelectedRow();
        if(selectIndexBook == -1){
            JOptionPane.showMessageDialog(rootPane, "Bạn chưa chọn sách cần sửa!");
        }
        else {
            Book b = listbook.get(selectIndexBook);
            EditBookFrm frm = new EditBookFrm(user, b);
            this.setVisible(false);
            frm.setVisible(true);
            
        }
    }//GEN-LAST:event_buttonEditBookActionPerformed

    private void buttonViewBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonViewBookActionPerformed
        // TODO add your handling code here:
        selectIndexBook = tableBook.getSelectedRow();
        if(selectIndexBook == -1){
            JOptionPane.showMessageDialog(rootPane, "Bạn chưa chọn sách cần sửa!");
        }
        else {
            Book b = listbook.get(selectIndexBook);
            BookDetailFrm frm = new BookDetailFrm(user, b);
            this.setVisible(false);
            frm.setVisible(true);
        }
    }//GEN-LAST:event_buttonViewBookActionPerformed

    private void buttonSearchBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSearchBookActionPerformed
        // TODO add your handling code here:
        String key = textSearchBook.getText();
        if(key.isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Bạn chưa nhập tên sách!");
        }
        else {
            try {
                listbook = new BookDAO().getBookByName(key);
                showTableBook();
            } catch (SQLException ex) {
                Logger.getLogger(ManageBookFrm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_buttonSearchBookActionPerformed

    private void chooseGenreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseGenreActionPerformed
        // TODO add your handling code here:
        int index = chooseGenre.getSelectedIndex();
        if(index == 0){
            try {
                listbook = new BookDAO().getAllBook();
                showTableBook();
            } catch (SQLException ex) {
                Logger.getLogger(ManageBookFrm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else {
            Genre g = listgenrebook.get(index-1);
            try {
                listbook = new BookDAO().getBookByGenreId(g.getId());
                showTableBook();
            } catch (SQLException ex) {
                Logger.getLogger(ManageBookFrm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        
    }//GEN-LAST:event_chooseGenreActionPerformed

    private void buttonBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBookActionPerformed
        // TODO add your handling code here:
        AddBookFrm frm = new AddBookFrm(user);
        this.setVisible(false);
        frm.setVisible(true);
    }//GEN-LAST:event_buttonBookActionPerformed

    private void buttonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExitActionPerformed
        // TODO add your handling code here:
        HomeFrm frm = new HomeFrm(user);
        this.setVisible(false);
        frm.setVisible(true);
    }//GEN-LAST:event_buttonExitActionPerformed

    private void buttonDeleteBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteBookActionPerformed
        // TODO add your handling code here:
        selectIndexBook = tableBook.getSelectedRow();
        if(selectIndexBook == -1){
            JOptionPane.showMessageDialog(rootPane, "Bạn chưa chọn sách cần xóa!");
        }
        else {
            Book b = listbook.get(selectIndexBook);
            boolean check = new BookDAO().deleteBook(b.getId());
            if(check == true){
                JOptionPane.showMessageDialog(rootPane, "Bạn đã xóa thông tin sách thành công!");
            }
            else {
                JOptionPane.showMessageDialog(rootPane, "Sách đã được mượn, bạn không thể xóa!");
            }
        }
        try {
            listbook = new BookDAO().getAllBook();
            showTableBook();
        } catch (SQLException ex) {
            Logger.getLogger(ManageBookFrm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonDeleteBookActionPerformed

    private void buttonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddActionPerformed
        // TODO add your handling code here:
        String nameGenreString = textGenreAdd.getText();
        if(nameGenreString.isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Bạn chưa nhập tên thể loại!");
        }
        else {
            try {
                int quantity = new GenreDAO().getGenreByName(nameGenreString);
                if(quantity > 0){
                    JOptionPane.showMessageDialog(rootPane, "Tên đã tồn tại!");
                }
                else {
                    new GenreDAO().addGenre(nameGenreString);
                    JOptionPane.showMessageDialog(rootPane, "Bạn đã thêm thể loại thành công!");
                    listgenre = new GenreDAO().getAllGenre();
                    textGenreAdd.setText("");
                    showTableGenre();
                }
            } catch (SQLException ex) {
                Logger.getLogger(ManageBookFrm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_buttonAddActionPerformed

    private void buttonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonUpdateActionPerformed
        // TODO add your handling code here:
        int selectIndex = tableGenre.getSelectedRow();
        if(selectIndex == -1){
            JOptionPane.showMessageDialog(rootPane, "Hãy chọn một hàng trong bảng!");
        }
        else {
            String nameGenreString = textGenreUpdate.getText();
            if(nameGenreString.isEmpty()){
                JOptionPane.showMessageDialog(rootPane, "Bạn chưa nhập tên thể loại mới!");
            }
            else {
                try {
                    new GenreDAO().updateGenre(Integer.parseInt(labelGenreId.getText()), nameGenreString);
                    JOptionPane.showMessageDialog(rootPane, "Đã cập nhật thành công!");
                    listgenre = new GenreDAO().getAllGenre();
                    labelGenreId.setText("");
                    labelNameGenre.setText("");
                    textGenreUpdate.setEditable(false);
                    showTableGenre();
                } catch (SQLException ex) {
                    Logger.getLogger(ManageBookFrm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_buttonUpdateActionPerformed

    private void buttonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteActionPerformed
        // TODO add your handling code here:
        int selectIndex = tableGenre.getSelectedRow();
        if(selectIndex == -1){
            JOptionPane.showMessageDialog(rootPane, "Bạn chưa chọn thể loại cần xóa!");
        }
        else {
            Genre g = listgenre.get(selectIndex);
            boolean check  = new GenreDAO().deleteGenre(g.getId());
            if(check == true){
                JOptionPane.showMessageDialog(rootPane, "Tên thể loại đã xóa thành công!");
            }
            else {
                JOptionPane.showMessageDialog(rootPane, "Tên thể loại đã có trong thông tin sách, không thể xóa!");
            }
            
            try {
                listgenre = new GenreDAO().getAllGenre();
                labelGenreId.setText("");
                labelNameGenre.setText("");
                textGenreUpdate.setEditable(false);
                showTableGenre();
            } catch (SQLException ex) {
                Logger.getLogger(ManageBookFrm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_buttonDeleteActionPerformed

    private void tableGenreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableGenreMouseClicked
        // TODO add your handling code here:
        int selectIndex = tableGenre.getSelectedRow();
        if(selectIndex == -1){
            JOptionPane.showMessageDialog(rootPane, "Hãy chọn một hàng trong bảng!");
            
        }
        else {
            Genre g = listgenre.get(selectIndex);
            labelGenreId.setText(String.valueOf(g.getId()));
            labelNameGenre.setText(g.getName());
            textGenreUpdate.setEditable(true);
        }
    }//GEN-LAST:event_tableGenreMouseClicked

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(ManageBookFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(ManageBookFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(ManageBookFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(ManageBookFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new ManageBookFrm().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAdd;
    private javax.swing.JButton buttonBook;
    private javax.swing.JButton buttonDelete;
    private javax.swing.JButton buttonDeleteBook;
    private javax.swing.JButton buttonEditBook;
    private javax.swing.JButton buttonExit;
    private javax.swing.JButton buttonSearchBook;
    private javax.swing.JButton buttonUpdate;
    private javax.swing.JButton buttonViewBook;
    private javax.swing.JComboBox<String> chooseGenre;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JLabel labelGenreId;
    private javax.swing.JLabel labelNameGenre;
    private javax.swing.JTable tableBook;
    private javax.swing.JTable tableGenre;
    private javax.swing.JTextField textGenreAdd;
    private javax.swing.JTextField textGenreUpdate;
    private javax.swing.JTextField textSearchBook;
    // End of variables declaration//GEN-END:variables

    private void showTableBook() {
        modelBook.setRowCount(0);
        int index = 1;
        for(Book b : listbook){
            try {
                int quantity = new BookDAO().getCountBookById(b.getId());
                modelBook.addRow(new Object[]{
                    index++, b.getName(), b.getAuthor(), b.getGenre().getName(), String.format("%,d", b.getPrice()) + " VND", quantity
                });
            } catch (SQLException ex) {
                Logger.getLogger(ManageBookFrm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private void dataChooseGenre() {
        chooseGenre.removeAllItems();
        chooseGenre.addItem("Tất cả");
        for(Genre g : listgenrebook){
            chooseGenre.addItem(g.getName());
        }
        
    }

    private void showTableGenre() {
        modelGenre.setRowCount(0);
        int index = 1;
        for(Genre g : listgenre){
            try {
                int quantity = new BookDAO().getBookByGenreId(g.getId()).size();
                modelGenre.addRow(new Object[]{
                    index++, g.getId(), g.getName(), quantity
                });
            } catch (SQLException ex) {
                Logger.getLogger(ManageBookFrm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
}
